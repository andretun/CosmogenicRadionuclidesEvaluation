# Sets some default verbose
# and initializes the graphic.
/control/verbose 2
/run/verbose 2

/run/initialize

# Use this open statement to create an OpenGL view:
/vis/open OGL

# Disable auto refresh and quieten vis messages whilst scene and
# trajectories are established:
/vis/viewer/set/autoRefresh false
/vis/verbose errors

# GeneralParticleSource
# I want to create a sphere around the meteorite that generates isotropically particles in the direction
/gps/verbose 1
/gps/particle proton
/gps/pos/type Surface
/gps/pos/shape Sphere
/gps/pos/radius 484.44 m
/gps/ang/type cos
/gps/ang/maxtheta 30 deg

# Energy macro
/control/execute energy.mac


# Draw geometry:
/vis/drawVolume

# Specify zoom value:
/vis/viewer/zoom 1.4

# Specify style (surface or wireframe):
/vis/viewer/set/style surface
# To get nice view
/vis/geometry/set/visibility World 0 false

# Draw smooth trajectories at end of event, showing trajectory points
# as markers 2 pixels wide:
/vis/scene/add/trajectories smooth
/vis/scene/add/axes
/vis/modeling/trajectories/create/drawByCharge
/vis/modeling/trajectories/drawByCharge-0/default/setDrawStepPts false
/vis/modeling/trajectories/drawByCharge-0/default/setStepPtsSize 1
# (if too many tracks cause core dump => /tracking/storeTrajectory 0)

# For example, to select colour by particle ID:
/vis/modeling/trajectories/create/drawByParticleID
/vis/modeling/trajectories/drawByParticleID-0/set e- red
/vis/modeling/trajectories/drawByParticleID-0/set gamma green
/vis/modeling/trajectories/drawByParticleID-0/set neutron yellow
/vis/modeling/trajectories/drawByParticleID-0/set alpha blue
/vis/modeling/trajectories/drawByParticleID-0/set GenericIon blue

# To superimpose all of the events from a given run:
/vis/scene/endOfEventAction accumulate

# Re-establish auto refreshing and verbosity:
/vis/viewer/set/autoRefresh true
/vis/verbose warnings
